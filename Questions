Day1>
longestWord.is
13
thapa interview code
longes/Word.js-jsinterview-Visual Studio Code
hashtag generator.js
index.js Day3
index.js
// Programming Question: Longest word in a String
//
//? Q: write a function findrongestword that takes a string as input and suttiple longest words, return the first encountered. turns longest word in the string. If there
// Constraints.
//7 The input string may contain alphabetic characters, digits, spaces, and punctuation.
//? The input string is noоп-карту.
//? The input string way contain aultiple words separaten spaces.
//* Note:
expty false. ? If the input string contains only whitespace, the function should return
// // The function should ignore leading and trailing whitespace when determining the longest word.
console.log(
};
findLongest Word ("Watch Thapa Technical javascript course youtube")



Day2> hashtag_generator.js
//
//* Programming Question: Hash Tag Generator
//x
//? You are required to implement a function generatelash that generates a hash tag from a given input string. The hash tag should be constructed as follows:
? The input string should be converted to a hash tag format, where each word is capitalized and concatenated together without spaces.
//? If the length of the input string is greater than 280 characters or if the input string is empty or contains only whitespace, the function should return false.
//7 Otherwise, the function should return the generated hash tag prefixed with #.
10
11
// Write a function generateHash to accomplish this task.
12
13 console.log(generateHash("my name is thapa technical"));
14
// o/p #MyName Is Thapa Technical"


Day3>
index's
//*-
//* Interview Question: Count Occurrences of Character
3 //*
5 //! Task:
6 //? Write a function called countChar that takes two parameters: a string and a character to count. The function should return the number of times the specified character appears in the string.
8 console.log(countChar("Mississippi", "I")); // Output: 4
10 //todo Constraints:
11 //? The function should be case-sensitive.
12 //? The function should handle both lowercase and uppercase characters.
13 //7 The character parameter can be any printable ASCII character (the function sho
14
accept any character that is part of the ASCII character set and is printable).






Day4>
index's

//* Interview Question:

//? Write a function called checkTriangleType that takes three parameters representing the lengths of the sides of a triangle. The function should return a string indicating the type of triangle: "equilateral", "isosceles", or "scalene".
6 console.log(checkTriangleType(3, 3, 3)); // Output: "equilateral" console.log(checkTriangleType(3, 4, 3)); // Output: "isosceles"
8 console.log(checkTriangleType(5, 8, 6)); // Output: "scalene"
10 //todo The function should adhere to the following rules:
11 //? If all three sides are of equal length, return "equilateral".
12 //? If only two sides are of equal length, return "isosceles".
13
//7 If all three sides have different lengths, return "scalene".
14




Day5>

//*-
//* Programming Question: Sort an Array
//*
5 //? Write a function to sort an array of numbers in an ascending order.
6
// Example usage:
8 // console.log(sortAscending ([5, 3, 1, 8])); // Output: [1, 3, 5, 8]
// 9 console.log(sortAscending ([5, 3, 10, 8])); // Output: [3, 5, 8,10]
// 10 console.log(typeof sortAscending);
11
12 //todo Requirements:
13 //? The function should take an array of numbers as input.
14 //? It should return a new array with the numbers sorted in ascending order.
15 //7 The original array should remain unchanged.
16 //? You are not allowed to use the built-in sort() method.

Days6
// Write a function to determine whether a given string is a palindrome or not. A palindrome is a word, phrase, number, or other sequence of characters that reads the same forward and backward, ignoring spaces, punctuation, and
// capitalization.


Days7

1 // Write a function findMax that takes an array of numbers as input and returns the maximum number in the array.

Days8
1 // Challenge: Factorial Finder
integer num as input and returns its factorial. The factorial of a non-negative integer n, denoted as n!, is the product of all positive integers less than or equal to n. The factorial of 0 is defined as 1.
م
4
5 // Here are some examples of factorial calculations:
6
7 // factorial(0) => 1
8 // factorial(1) => 1
9 // factorial(2) => 2
10 // factorial(3) => 6
11 // factorial(4) => 24
12 // factorial(5) => 120
13 // Your function should work for any non-negative integer input.

Days9
1 // Challenge: Calculate the Average
2
3 // Write a function called calculateAverage that takes an array of numbers as input and returns the average of those numbers.
4
5 // Your function should:
6
7 // Accept an array of numbers as input.
8 // Calculate the sum of all the numbers in the array.
9 // Divide the sum by the total number of elements in the array to find the average.
10 // Return the calculated average

Days10
// Write a function arraysAreEqual that takes two arrays arr1 and arr2 as input and returns true if the arrays are equal (i.e., contain the same elements in the same order), and false otherwise.
2
3
4
5
// Example usage:
// console.log(arraysAreEqual([1, 2, 3], [1, 2, 3])); //
// Output: true
// 6
// 7
// console.log(arraysAreEqual([1, 2, 3], [1, 2, 4])); //
// Output: false
// console.log(arraysAreEqual([], [])); // Output: true


Days11

//11: Write a function that takes a number as input and returns the sum of its digits.
2
3
4 // Example usage:
5 console.log(sumOfDigits (1234)); // Output: 10
6 console.log(sumOfDigits (4321)); // Output: 10
7 console.log(sumOfDigits (123456)); // Output: 21
8
9
10
11 // Constraints:
12
13 // The input number will always be a positive integer.
14
// The input number can have multiple digits.
15 // The output should be the sum of all the digits in the input number.
16
17 // Homework
18 // This function calculates the sum of digits without converting the number
to a string.
19



Days12

// 12: Write a function that takes an array of integers as input and removes any duplicate elements, returning a new array with only the unique elements.
2
3
4
م
5 // Example usage:
6 console.log(removeDuplicates ([1, 2, 3, 2, 1, 4])); // Output: [1, 2, 3, 4]
7 console.log(removeDuplicates ([5, 6, 7, 7, 8, 8, 9])); // Output: [5, 6, 7, 8,
9]
8 console.log(removeDuplicates ([1, 2, 3, 4])); // Output: [1, 2, 3, 4]
9 console.log(removeDuplicates ([])); // Output: []
10
11
12 // The new Set() method in JavaScript creates a new Set object. A Set object is a collection of unique values. It can store any type of value, whether primitive values or object references.
13
14 // Constraints:
15
16 // The input array may contain both positive and negative integers.
17 // The input array may be empty.



Days13
// 13: Write a function that takes a string as input and returns the count of vowels in that string. Consider 'a', 'e', 'i', 'o', and 'u' as vowels (both lowercase and uppercase).
2
3
4
5 // Example usage:
6 console.log(countVowels ("Helloo world")); // Output: 3
7 console.log(countVowels ("The quick brown fox")); // Output: 5
8 console.log(countVowels ("Brrrp")); // Output: 0
9
10 // Constraints:
11
12 // The input string may contain letters in both uppercase and lowercase.
13 // The output should be a non-negative integer representing the count of vowels in the input string.

Days14
// 14: Write a function called isPowerOfTwo that takes an integer num as input and returns true if num is a power of two, and false otherwise.

5
6 // Example usage:
7 console.log(isPowerOfTwo (8)); // Output: true
8 console.log(isPowerOfTwo (7)); // Output: false
9
10 // Notes:
11
12 // The input num will be a positive integer.
13 // Zero (0) and negative integers are not considered powers of two.
14 // The function should return true if the given number is a power of 2, and false otherwise.
15
16 // we can solve it using bitwise operator too but its your chance to do it and let me know in the comment section


Days22
//? Write a JavaScript function findMedian(arr) that takes an array of numbers as input and returns the median value. If the array has an even number of elements, return the average of the two middle values.
//? For example, the median of 3, 3, 5, 9, 15 is 5. If there is an even number of observations, then there is no single middle value; the median is then usually defined to be the mean of the two middle values: so the median of 3, 5, 7, 9 is (5+7)/26.
//todo Tips
//? Sort the array in ascending order.
//? If the array has an odd number of elements, the median is the middle element.
//? If the array has an even number of elements, the median is the average of the two middle elements