Day1>
longestWord.is
13
thapa interview code
longes/Word.js-jsinterview-Visual Studio Code
hashtag generator.js
index.js Day3
index.js
// Programming Question: Longest word in a String
//
//? Q: write a function findrongestword that takes a string as input and suttiple longest words, return the first encountered. turns longest word in the string. If there
// Constraints.
//7 The input string may contain alphabetic characters, digits, spaces, and punctuation.
//? The input string is noоп-карту.
//? The input string way contain aultiple words separaten spaces.
//* Note:
expty false. ? If the input string contains only whitespace, the function should return
// // The function should ignore leading and trailing whitespace when determining the longest word.
console.log(
};
findLongest Word ("Watch Thapa Technical javascript course youtube")



Day2> hashtag_generator.js
//
//* Programming Question: Hash Tag Generator
//x
//? You are required to implement a function generatelash that generates a hash tag from a given input string. The hash tag should be constructed as follows:
? The input string should be converted to a hash tag format, where each word is capitalized and concatenated together without spaces.
//? If the length of the input string is greater than 280 characters or if the input string is empty or contains only whitespace, the function should return false.
//7 Otherwise, the function should return the generated hash tag prefixed with #.
10
11
// Write a function generateHash to accomplish this task.
12
13 console.log(generateHash("my name is thapa technical"));
14
// o/p #MyName Is Thapa Technical"


Day3>
index's
//*-
//* Interview Question: Count Occurrences of Character
3 //*
5 //! Task:
6 //? Write a function called countChar that takes two parameters: a string and a character to count. The function should return the number of times the specified character appears in the string.
8 console.log(countChar("Mississippi", "I")); // Output: 4
10 //todo Constraints:
11 //? The function should be case-sensitive.
12 //? The function should handle both lowercase and uppercase characters.
13 //7 The character parameter can be any printable ASCII character (the function sho
14
accept any character that is part of the ASCII character set and is printable).






Day4>
index's

//* Interview Question:

//? Write a function called checkTriangleType that takes three parameters representing the lengths of the sides of a triangle. The function should return a string indicating the type of triangle: "equilateral", "isosceles", or "scalene".
6 console.log(checkTriangleType(3, 3, 3)); // Output: "equilateral" console.log(checkTriangleType(3, 4, 3)); // Output: "isosceles"
8 console.log(checkTriangleType(5, 8, 6)); // Output: "scalene"
10 //todo The function should adhere to the following rules:
11 //? If all three sides are of equal length, return "equilateral".
12 //? If only two sides are of equal length, return "isosceles".
13
//7 If all three sides have different lengths, return "scalene".
14




Day5>

//*-
//* Programming Question: Sort an Array
//*
5 //? Write a function to sort an array of numbers in an ascending order.
6
// Example usage:
8 // console.log(sortAscending ([5, 3, 1, 8])); // Output: [1, 3, 5, 8]
9 console.log(sortAscending ([5, 3, 10, 8])); // Output: [3, 5, 8,10]
10 console.log(typeof sortAscending [2]);
11
12 //todo Requirements:
13 //? The function should take an array of numbers as input.
14 //? It should return a new array with the numbers sorted in ascending order.
15 //7 The original array should remain unchanged.
16 //? You are not allowed to use the built-in sort() method.


